// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// CISKubeBenchSummaryApplyConfiguration represents an declarative configuration of the CISKubeBenchSummary type for use
// with apply.
type CISKubeBenchSummaryApplyConfiguration struct {
	PassCount *int `json:"passCount,omitempty"`
	InfoCount *int `json:"infoCount,omitempty"`
	WarnCount *int `json:"warnCount,omitempty"`
	FailCount *int `json:"failCount,omitempty"`
}

// CISKubeBenchSummaryApplyConfiguration constructs an declarative configuration of the CISKubeBenchSummary type for use with
// apply.
func CISKubeBenchSummary() *CISKubeBenchSummaryApplyConfiguration {
	return &CISKubeBenchSummaryApplyConfiguration{}
}

// WithPassCount sets the PassCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PassCount field is set to the value of the last call.
func (b *CISKubeBenchSummaryApplyConfiguration) WithPassCount(value int) *CISKubeBenchSummaryApplyConfiguration {
	b.PassCount = &value
	return b
}

// WithInfoCount sets the InfoCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InfoCount field is set to the value of the last call.
func (b *CISKubeBenchSummaryApplyConfiguration) WithInfoCount(value int) *CISKubeBenchSummaryApplyConfiguration {
	b.InfoCount = &value
	return b
}

// WithWarnCount sets the WarnCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the WarnCount field is set to the value of the last call.
func (b *CISKubeBenchSummaryApplyConfiguration) WithWarnCount(value int) *CISKubeBenchSummaryApplyConfiguration {
	b.WarnCount = &value
	return b
}

// WithFailCount sets the FailCount field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailCount field is set to the value of the last call.
func (b *CISKubeBenchSummaryApplyConfiguration) WithFailCount(value int) *CISKubeBenchSummaryApplyConfiguration {
	b.FailCount = &value
	return b
}
