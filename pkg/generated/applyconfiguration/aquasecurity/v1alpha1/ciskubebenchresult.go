// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// CISKubeBenchResultApplyConfiguration represents an declarative configuration of the CISKubeBenchResult type for use
// with apply.
type CISKubeBenchResultApplyConfiguration struct {
	TestNumber  *string `json:"test_number,omitempty"`
	TestDesc    *string `json:"test_desc,omitempty"`
	Remediation *string `json:"remediation,omitempty"`
	Status      *string `json:"status,omitempty"`
	Scored      *bool   `json:"scored,omitempty"`
}

// CISKubeBenchResultApplyConfiguration constructs an declarative configuration of the CISKubeBenchResult type for use with
// apply.
func CISKubeBenchResult() *CISKubeBenchResultApplyConfiguration {
	return &CISKubeBenchResultApplyConfiguration{}
}

// WithTestNumber sets the TestNumber field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TestNumber field is set to the value of the last call.
func (b *CISKubeBenchResultApplyConfiguration) WithTestNumber(value string) *CISKubeBenchResultApplyConfiguration {
	b.TestNumber = &value
	return b
}

// WithTestDesc sets the TestDesc field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TestDesc field is set to the value of the last call.
func (b *CISKubeBenchResultApplyConfiguration) WithTestDesc(value string) *CISKubeBenchResultApplyConfiguration {
	b.TestDesc = &value
	return b
}

// WithRemediation sets the Remediation field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Remediation field is set to the value of the last call.
func (b *CISKubeBenchResultApplyConfiguration) WithRemediation(value string) *CISKubeBenchResultApplyConfiguration {
	b.Remediation = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *CISKubeBenchResultApplyConfiguration) WithStatus(value string) *CISKubeBenchResultApplyConfiguration {
	b.Status = &value
	return b
}

// WithScored sets the Scored field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Scored field is set to the value of the last call.
func (b *CISKubeBenchResultApplyConfiguration) WithScored(value bool) *CISKubeBenchResultApplyConfiguration {
	b.Scored = &value
	return b
}
