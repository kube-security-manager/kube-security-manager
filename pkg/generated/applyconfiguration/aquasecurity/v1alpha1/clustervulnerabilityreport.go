// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// ClusterVulnerabilityReportApplyConfiguration represents an declarative configuration of the ClusterVulnerabilityReport type for use
// with apply.
type ClusterVulnerabilityReportApplyConfiguration struct {
	*v1.TypeMetaApplyConfiguration   `json:"TypeMeta,omitempty"`
	*v1.ObjectMetaApplyConfiguration `json:"metadata,omitempty"`
	Report                           *VulnerabilityReportDataApplyConfiguration `json:"report,omitempty"`
}

// ClusterVulnerabilityReport constructs an declarative configuration of the ClusterVulnerabilityReport type for use with
// apply.
func ClusterVulnerabilityReport(name string) *ClusterVulnerabilityReportApplyConfiguration {
	b := &ClusterVulnerabilityReportApplyConfiguration{}
	b.WithName(name)
	b.WithKind("ClusterVulnerabilityReport")
	b.WithAPIVersion("aquasecurity.github.io/v1alpha1")
	return b
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithKind(value string) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureTypeMetaApplyConfigurationExists()
	b.Kind = &value
	return b
}

// WithAPIVersion sets the APIVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIVersion field is set to the value of the last call.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithAPIVersion(value string) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureTypeMetaApplyConfigurationExists()
	b.APIVersion = &value
	return b
}

func (b *ClusterVulnerabilityReportApplyConfiguration) ensureTypeMetaApplyConfigurationExists() {
	if b.TypeMetaApplyConfiguration == nil {
		b.TypeMetaApplyConfiguration = &v1.TypeMetaApplyConfiguration{}
	}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithName(value string) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	b.Name = &value
	return b
}

// WithGenerateName sets the GenerateName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GenerateName field is set to the value of the last call.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithGenerateName(value string) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	b.GenerateName = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithNamespace(value string) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	b.Namespace = &value
	return b
}

// WithUID sets the UID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UID field is set to the value of the last call.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithUID(value types.UID) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	b.UID = &value
	return b
}

// WithResourceVersion sets the ResourceVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ResourceVersion field is set to the value of the last call.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithResourceVersion(value string) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	b.ResourceVersion = &value
	return b
}

// WithGeneration sets the Generation field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Generation field is set to the value of the last call.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithGeneration(value int64) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	b.Generation = &value
	return b
}

// WithCreationTimestamp sets the CreationTimestamp field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CreationTimestamp field is set to the value of the last call.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithCreationTimestamp(value metav1.Time) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	b.CreationTimestamp = &value
	return b
}

// WithDeletionTimestamp sets the DeletionTimestamp field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DeletionTimestamp field is set to the value of the last call.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithDeletionTimestamp(value metav1.Time) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	b.DeletionTimestamp = &value
	return b
}

// WithDeletionGracePeriodSeconds sets the DeletionGracePeriodSeconds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DeletionGracePeriodSeconds field is set to the value of the last call.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithDeletionGracePeriodSeconds(value int64) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	b.DeletionGracePeriodSeconds = &value
	return b
}

// WithLabels puts the entries into the Labels field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Labels field,
// overwriting an existing map entries in Labels field with the same key.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithLabels(entries map[string]string) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	if b.Labels == nil && len(entries) > 0 {
		b.Labels = make(map[string]string, len(entries))
	}
	for k, v := range entries {
		b.Labels[k] = v
	}
	return b
}

// WithAnnotations puts the entries into the Annotations field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Annotations field,
// overwriting an existing map entries in Annotations field with the same key.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithAnnotations(entries map[string]string) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	if b.Annotations == nil && len(entries) > 0 {
		b.Annotations = make(map[string]string, len(entries))
	}
	for k, v := range entries {
		b.Annotations[k] = v
	}
	return b
}

// WithOwnerReferences adds the given value to the OwnerReferences field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the OwnerReferences field.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithOwnerReferences(values ...*v1.OwnerReferenceApplyConfiguration) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithOwnerReferences")
		}
		b.OwnerReferences = append(b.OwnerReferences, *values[i])
	}
	return b
}

// WithFinalizers adds the given value to the Finalizers field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Finalizers field.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithFinalizers(values ...string) *ClusterVulnerabilityReportApplyConfiguration {
	b.ensureObjectMetaApplyConfigurationExists()
	for i := range values {
		b.Finalizers = append(b.Finalizers, values[i])
	}
	return b
}

func (b *ClusterVulnerabilityReportApplyConfiguration) ensureObjectMetaApplyConfigurationExists() {
	if b.ObjectMetaApplyConfiguration == nil {
		b.ObjectMetaApplyConfiguration = &v1.ObjectMetaApplyConfiguration{}
	}
}

// WithReport sets the Report field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Report field is set to the value of the last call.
func (b *ClusterVulnerabilityReportApplyConfiguration) WithReport(value *VulnerabilityReportDataApplyConfiguration) *ClusterVulnerabilityReportApplyConfiguration {
	b.Report = value
	return b
}
