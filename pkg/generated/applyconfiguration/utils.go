// Code generated by applyconfiguration-gen. DO NOT EDIT.

package applyconfiguration

import (
	v1alpha1 "github.com/kube-security-manager/kube-security-manager/pkg/apis/aquasecurity/v1alpha1"
	aquasecurityv1alpha1 "github.com/kube-security-manager/kube-security-manager/pkg/generated/applyconfiguration/aquasecurity/v1alpha1"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
)

// ForKind returns an apply configuration type for the given GroupVersionKind, or nil if no
// apply configuration type exists for the given GroupVersionKind.
func ForKind(kind schema.GroupVersionKind) interface{} {
	switch kind {
	// Group=aquasecurity.github.io, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithKind("Artifact"):
		return &aquasecurityv1alpha1.ArtifactApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("Check"):
		return &aquasecurityv1alpha1.CheckApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("CheckScope"):
		return &aquasecurityv1alpha1.CheckScopeApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("CISKubeBenchReport"):
		return &aquasecurityv1alpha1.CISKubeBenchReportApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("CISKubeBenchReportData"):
		return &aquasecurityv1alpha1.CISKubeBenchReportDataApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("CISKubeBenchResult"):
		return &aquasecurityv1alpha1.CISKubeBenchResultApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("CISKubeBenchSection"):
		return &aquasecurityv1alpha1.CISKubeBenchSectionApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("CISKubeBenchSummary"):
		return &aquasecurityv1alpha1.CISKubeBenchSummaryApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("CISKubeBenchTests"):
		return &aquasecurityv1alpha1.CISKubeBenchTestsApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ClusterConfigAuditReport"):
		return &aquasecurityv1alpha1.ClusterConfigAuditReportApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ClusterVulnerabilityReport"):
		return &aquasecurityv1alpha1.ClusterVulnerabilityReportApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ConfigAuditReport"):
		return &aquasecurityv1alpha1.ConfigAuditReportApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ConfigAuditReportData"):
		return &aquasecurityv1alpha1.ConfigAuditReportDataApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ConfigAuditSummary"):
		return &aquasecurityv1alpha1.ConfigAuditSummaryApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("Registry"):
		return &aquasecurityv1alpha1.RegistryApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("Scanner"):
		return &aquasecurityv1alpha1.ScannerApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("Vulnerability"):
		return &aquasecurityv1alpha1.VulnerabilityApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("VulnerabilityReport"):
		return &aquasecurityv1alpha1.VulnerabilityReportApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("VulnerabilityReportData"):
		return &aquasecurityv1alpha1.VulnerabilityReportDataApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("VulnerabilitySummary"):
		return &aquasecurityv1alpha1.VulnerabilitySummaryApplyConfiguration{}

	}
	return nil
}
