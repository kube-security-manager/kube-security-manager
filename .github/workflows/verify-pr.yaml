---
# This workflow is triggered on push or pull request for the main branch.
# It runs tests and various checks to validate that the proposed changes
# will not introduce any regression after merging the code to the main branch.
name: Verify PR

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - 'mkdocs.yml'
      - 'LICENSE'
      - 'NOTICE'

env:
  KIND_IMAGE: "kindest/node:v1.21.14@sha256:220cfafdf6e3915fbce50e13d1655425558cb98872c53f802605aa2fb2d569cf"

# Disable permissions granted to the GITHUB_TOKEN for all the available scopes.
permissions: { }

# Cancel any in-flight jobs for the same PR branch so there's only one active at a time.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  verify-code:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09  # v2.5.1
        with:
          egress-policy: audit
      - name: Checkout code
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac  # v4.0.0
      - name: Setup Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
        with:
          go-version-file: go.mod
          cache: true
      - name: Vendor Go modules
        run: go mod vendor
      - name: Verify generated Go code
        run: GOPATH="$(go env GOPATH)" ./hack/verify-codegen.sh

  run-unit-tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09  # v2.5.1
        with:
          egress-policy: audit
      - name: Checkout code
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac  # v4.0.0
      - name: Setup Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
        with:
          go-version-file: go.mod
          cache: true
      - name: Run unit tests
        run: make unit-tests
      - name: Upload code coverage results
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d  # v3.1.4
        with:
          files: ./coverage.txt
          verbose: true

  run-integration-tests:
    needs:
      - run-unit-tests
      - verify-code
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09  # v2.5.1
        with:
          egress-policy: audit
      - name: Checkout code
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac  # v4.0.0
      - name: Setup Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
        with:
          go-version-file: go.mod
          cache: true
      - name: Setup Kubernetes cluster (KIND)
        run: |
          kind create cluster --image=${{ env.KIND_IMAGE }}
      - name: Test connection to Kubernetes cluster
        run: |
          kubectl cluster-info
          kubectl wait --for=condition=Ready nodes --all --timeout=300s
          kubectl describe node
      - name: Run integration tests
        run: |
          kubectl apply -f deploy/crd/vulnerabilityreports.crd.yaml \
            -f deploy/crd/configauditreports.crd.yaml \
            -f deploy/crd/clusterconfigauditreports.crd.yaml \
            -f deploy/crd/ciskubebenchreports.crd.yaml
          kubectl apply -f deploy/static/01-starboard-operator.ns.yaml \
            -f deploy/static/02-starboard-operator.rbac.yaml
          kubectl apply -f deploy/static/03-starboard-operator.config.yaml \
            -f deploy/static/04-starboard-operator.policies.yaml
          make itests-starboard-operator
        env:
          KUBECONFIG: /home/runner/.kube/config
          OPERATOR_NAMESPACE: starboard-system
          OPERATOR_TARGET_NAMESPACES: default
