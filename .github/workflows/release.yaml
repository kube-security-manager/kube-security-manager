---
# This workflow is triggered whenever we release a new version of Starboard
# by creating an annotated Git tag and pushing it to the upstream Git repository.
#
#    git tag -a v0.0.1 -m 'Release v0.0.1'
#    git push upstream v0.0.1
name: Release

on:
  push:
    tags:
      - "v*"
env:
  KIND_IMAGE: "kindest/node:v1.21.14@sha256:220cfafdf6e3915fbce50e13d1655425558cb98872c53f802605aa2fb2d569cf"

jobs:
  run-unit-tests:
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09  # v2.5.1
        with:
          egress-policy: audit
      - name: Checkout code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9  # v3.5.3
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
        with:
          go-version-file: go.mod
          cache: true
      - name: Run unit tests
        run: make unit-tests
  run-integration-tests:
    needs:
      - run-unit-tests
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09  # v2.5.1
        with:
          egress-policy: audit
      - name: Checkout code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9  # v3.5.3
      - name: Setup Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
        with:
          go-version-file: go.mod
          cache: true
      - name: Setup Kubernetes cluster (KIND)
        run: |
          kind create cluster --image=${{ env.KIND_IMAGE }}
      - name: Test connection to Kubernetes cluster
        run: |
          kubectl cluster-info
          kubectl wait --for=condition=Ready nodes --all --timeout=300s
          kubectl describe node
      - name: Run integration tests
        run: |
          kubectl apply -f deploy/crd/vulnerabilityreports.crd.yaml \
            -f deploy/crd/configauditreports.crd.yaml \
            -f deploy/crd/clusterconfigauditreports.crd.yaml \
            -f deploy/crd/clustercompliancereports.crd.yaml \
            -f deploy/crd/clustercompliancedetailreports.crd.yaml \
            -f deploy/crd/ciskubebenchreports.crd.yaml
          kubectl apply -f deploy/static/01-starboard-operator.ns.yaml \
            -f deploy/static/02-starboard-operator.rbac.yaml
          make itests-starboard-operator
        env:
          KUBECONFIG: /home/runner/.kube/config
          OPERATOR_NAMESPACE: starboard-system
          OPERATOR_TARGET_NAMESPACES: default
  release:
    needs:
      - run-integration-tests
    runs-on: ubuntu-22.04
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09  # v2.5.1
        with:
          egress-policy: audit
      - name: Checkout code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9  # v3.5.3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Setup Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe
        with:
          go-version-file: go.mod
          cache: true
      - name: Login to docker.io registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Release
        uses: goreleaser/goreleaser-action@v4
        with:
          version: v1.7.0
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
